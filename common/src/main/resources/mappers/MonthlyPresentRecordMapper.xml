<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmcc.vrp.province.dao.MonthlyPresentRecordMapper">
	<resultMap id="BaseResultMap"
		type="com.cmcc.vrp.province.model.MonthlyPresentRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="rule_id" property="ruleId" jdbcType="BIGINT" />
		<result column="prd_id" property="prdId" jdbcType="BIGINT" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="effect_type" property="effectType" jdbcType="INTEGER" />
		<result column="status_code" property="statusCode" jdbcType="VARCHAR" />
		<result column="error_message" property="errorMessage"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
		<result column="sys_serial_num" property="sysSerialNum"
			jdbcType="VARCHAR" />
		<result column="boss_serial_num" property="bossSerialNum"
			jdbcType="VARCHAR" />
    <result column="give_month" property="giveMonth" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="ExtendResultMap" extends="BaseResultMap"
		type="com.cmcc.vrp.province.model.MonthlyPresentRecord">
		<result column="entId" property="entId" jdbcType="BIGINT" />
		<result column="entName" property="entName" jdbcType="VARCHAR" />
		<result column="entCode" property="entCode" jdbcType="VARCHAR" />
		<result column="productName" property="productName" jdbcType="VARCHAR" />
		<result column="productCode" property="productCode" jdbcType="VARCHAR" />
		<result column="monthCount" property="monthCount" jdbcType="INTEGER" />
		<result column="productSize" property="productSize" jdbcType="BIGINT" />
	</resultMap>

	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, rule_id, prd_id, mobile, status, effect_type, status_code,
		error_message, create_time,
		operate_time, sys_serial_num, boss_serial_num,give_month
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from monthly_present_record
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from monthly_present_record
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.cmcc.vrp.province.model.MonthlyPresentRecord" useGeneratedKeys="true" keyProperty="id">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into monthly_present_record (id, rule_id, prd_id,
		mobile, status, effect_type,
		status_code, error_message, create_time,
		operate_time, sys_serial_num, boss_serial_num,give_month
		)
		values (#{id,jdbcType=BIGINT}, #{ruleId,jdbcType=BIGINT},
		#{prdId,jdbcType=BIGINT},
		#{mobile,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{effectType,jdbcType=INTEGER},
		#{statusCode,jdbcType=VARCHAR}, #{errorMessage,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{operateTime,jdbcType=TIMESTAMP}, #{sysSerialNum,jdbcType=VARCHAR}, #{bossSerialNum,jdbcType=VARCHAR},#{giveMonth,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.cmcc.vrp.province.model.MonthlyPresentRecord"
		useGeneratedKeys="true" keyProperty="id">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into monthly_present_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="ruleId != null">
				rule_id,
			</if>
			<if test="prdId != null">
				prd_id,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="effectType != null">
				effect_type,
			</if>
			<if test="statusCode != null">
				status_code,
			</if>
			<if test="errorMessage != null">
				error_message,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="operateTime != null">
				operate_time,
			</if>
			<if test="sysSerialNum != null">
				sys_serial_num,
			</if>
			<if test="bossSerialNum != null">
				boss_serial_num,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="ruleId != null">
				#{ruleId,jdbcType=BIGINT},
			</if>
			<if test="prdId != null">
				#{prdId,jdbcType=BIGINT},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="effectType != null">
				#{effectType,jdbcType=INTEGER},
			</if>
			<if test="statusCode != null">
				#{statusCode,jdbcType=VARCHAR},
			</if>
			<if test="errorMessage != null">
				#{errorMessage,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="operateTime != null">
				#{operateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="sysSerialNum != null">
				#{sysSerialNum,jdbcType=VARCHAR},
			</if>
			<if test="bossSerialNum != null">
				#{bossSerialNum,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cmcc.vrp.province.model.MonthlyPresentRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update monthly_present_record
		<set>
			<if test="ruleId != null">
				rule_id = #{ruleId,jdbcType=BIGINT},
			</if>
			<if test="prdId != null">
				prd_id = #{prdId,jdbcType=BIGINT},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="effectType != null">
				effect_type = #{effectType,jdbcType=INTEGER},
			</if>
			<if test="statusCode != null">
				status_code = #{statusCode,jdbcType=VARCHAR},
			</if>
			<if test="errorMessage != null">
				error_message = #{errorMessage,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="operateTime != null">
				operate_time = #{operateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="sysSerialNum != null">
				sys_serial_num = #{sysSerialNum,jdbcType=VARCHAR},
			</if>
			<if test="bossSerialNum != null">
				boss_serial_num = #{bossSerialNum,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cmcc.vrp.province.model.MonthlyPresentRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update monthly_present_record
		set rule_id = #{ruleId,jdbcType=BIGINT},
		prd_id = #{prdId,jdbcType=BIGINT},
		mobile = #{mobile,jdbcType=VARCHAR},
		status = #{status,jdbcType=TINYINT},
		effect_type = #{effectType,jdbcType=INTEGER},
		status_code = #{statusCode,jdbcType=VARCHAR},
		error_message = #{errorMessage,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		operate_time = #{operateTime,jdbcType=TIMESTAMP},
		sys_serial_num = #{sysSerialNum,jdbcType=VARCHAR},
		boss_serial_num = #{bossSerialNum,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="getRecords" resultMap="ExtendResultMap"
		parameterType="java.util.Map">
		select
		record.*,
		e.id as entId,
		e.name as entName,
		e.code as entCode,
		p.name as productName,
		p.product_code as productCode,
		p.product_size as productSize,
		rule.month_count as monthCount
		from
		monthly_present_record record
		left join
		monthly_present_rule rule on rule.id = record.rule_id
		left join
		enterprises e on e.id = rule.ent_id
		left join product p on p.id =
		record.prd_id
		<where>
			<if test="ruleId != null">
				and record.rule_id = #{ruleId,jdbcType=BIGINT}
			</if>
			<if test="status != null">
				and record.status = #{status,jdbcType=INTEGER}
			</if>
			<if test="mobile != null and mobile != ''">
				and record.mobile like
				CONCAT('%',CONCAT(#{mobile,jdbcType=VARCHAR},'%'))
			</if>
			<if test="startTime != null  and  startTime !='' ">
				and record.create_time &gt;= #{startTime}
			</if>
			<if test="endTime != null and  endTime !=''">
				and record.create_time &lt;= #{endTime}
			</if>
            <if test="giveMonth != null">
                and record.give_month = #{giveMonth,jdbcType=INTEGER}
            </if>
		</where>
		order by record.create_time desc
		<if test="pageSize != null and pageNum!=null and pageSize != 0">
			LIMIT #{pageNum}, #{pageSize}
		</if>
	</select>

	<select id="countRecords" resultType="java.lang.Long"
		parameterType="java.util.Map">
		select
		count(record.id)
		from
		monthly_present_record record
		left join monthly_present_rule rule
		on rule.id = record.rule_id
		left join enterprises e on e.id =
		rule.ent_id
		left join product p on p.id = record.prd_id
		<where>
			<if test="ruleId != null">
				and record.rule_id = #{ruleId,jdbcType=BIGINT}
			</if>
			<if test="status != null">
				and record.status = #{status,jdbcType=INTEGER}
			</if>
			<if test="mobile != null and mobile != ''">
				and record.mobile like
				CONCAT('%',CONCAT(#{mobile,jdbcType=VARCHAR},'%'))
			</if>
			<if test="startTime != null  and  startTime !='' ">
				and record.create_time &gt;= #{startTime}
			</if>
			<if test="endTime != null and  endTime !=''">
				and record.create_time &lt;= #{endTime}
			</if>
            <if test="giveMonth != null">
                and record.give_month = #{giveMonth,jdbcType=INTEGER}
            </if>
		</where>
	</select>

	<insert id="batchInsert" parameterType="java.util.List"
		useGeneratedKeys="true" keyProperty="id">
		insert into monthly_present_record (rule_id, prd_id,
		mobile, status, effect_type,
		status_code, error_message, create_time,
		operate_time, sys_serial_num, boss_serial_num,give_month
		)
		values
		<foreach collection="list" item="record" separator=",">
			(
			#{record.ruleId,jdbcType=BIGINT},
			#{record.prdId,jdbcType=BIGINT},
			#{record.mobile,jdbcType=VARCHAR},
			#{record.status,jdbcType=INTEGER},
			#{record.effectType,jdbcType=INTEGER},
			#{record.statusCode,jdbcType=VARCHAR},
			#{record.errorMessage,jdbcType=VARCHAR},
			#{record.createTime,jdbcType=TIMESTAMP},
			#{record.operateTime,jdbcType=TIMESTAMP},
			#{record.sysSerialNum,jdbcType=VARCHAR},
			#{record.bossSerialNum,jdbcType=VARCHAR},
			#{record.giveMonth,jdbcType=INTEGER}
			)
		</foreach>
	</insert>
	
	<update id="updateStatusAndStatusCode">
        UPDATE
        monthly_present_record
        SET
        status = #{status, jdbcType = INTEGER},
        error_message = #{errorMsg, jdbcType = VARCHAR},
        status_code = #{statusCode, jdbcType = VARCHAR},
        operate_time = NOW()
        WHERE
        id = #{id, jdbcType = BIGINT}
    </update>
    
    <update id="batchUpdateChargeResult" parameterType="java.util.List">
        UPDATE
        monthly_present_record
        SET
        status = CASE
        <foreach collection="records" item="record" close="ELSE `status` END,">
            WHEN id=#{record.id} THEN #{record.status}
        </foreach>

        error_message = CASE
        <foreach collection="records" item="record" close="ELSE `error_message` END,">
            WHEN id=#{record.id} THEN #{record.errorMessage}
        </foreach>

        operate_time = CASE
        <foreach collection="records" item="record" close="ELSE `operate_time` END">
            WHEN id=#{record.id} THEN NOW()
        </foreach>

        WHERE
        id IN
        <foreach collection="records" item="record" open="(" close=")" separator=",">
            #{record.id, jdbcType = BIGINT}
        </foreach>
    </update>
    
    <update id="updateStatus">
        UPDATE
        monthly_present_record
        SET
        status = #{status, jdbcType = INTEGER},
        error_message = #{errorMsg, jdbcType = VARCHAR},
        operate_time = NOW()
        WHERE
        id = #{id, jdbcType = BIGINT}
    </update>
    
     <!-- update statusCode -->
    <update id="updateStatusCode">
        UPDATE
        monthly_present_record
        SET
        status_code = #{statusCode, jdbcType = VARCHAR},
        operate_time = NOW()
        WHERE
        cast(IFNULL(status_code, '0') as SIGNED) &lt; cast(#{statusCode, jdbcType = VARCHAR} as SIGNED)
        and
        id = #{recordId, jdbcType = BIGINT}
    </update>
    
    <!-- batch update statusCode -->
    <update id="batchUpdateStatusCode">
        UPDATE
        monthly_present_record
        SET
        status_code = #{newStatusCode, jdbcType = VARCHAR},
        operate_time = NOW()
        WHERE
        cast(IFNULL(status_code, '0') as SIGNED) &lt; cast(#{newStatusCode, jdbcType = VARCHAR} as SIGNED)
        and
        id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id, jdbcType = BIGINT}
        </foreach>
    </update>
</mapper>