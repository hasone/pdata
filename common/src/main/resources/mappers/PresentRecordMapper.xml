<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmcc.vrp.province.dao.PresentRecordMapper">
    <resultMap id="BaseResultMap" type="com.cmcc.vrp.province.model.PresentRecord">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="rule_id" property="ruleId" jdbcType="BIGINT"/>
        <result column="prd_id" property="prdId" jdbcType="BIGINT"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="status_code" property="statusCode" jdbcType="VARCHAR"/>
        <result column="error_message" property="errorMessage" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP"/>
        <result column="sys_serial_num" property="sysSerialNum" jdbcType="VARCHAR"/>
        <result column="boss_serial_num" property="bossSerialNum" jdbcType="VARCHAR"/>
        <result column="effect_type" property="effectType" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="RecordResultMap" type="com.cmcc.vrp.province.model.PresentRecordResult">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="name" property="prdName" jdbcType="VARCHAR"/>
        <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="error_message" property="errorMessage" jdbcType="VARCHAR"/>
        <result column="creator_id" property="creatorId" jdbcType="BIGINT"/>
        <result column="sys_serial_num" property="sysSerialNum" jdbcType="VARCHAR"/>
        <result column="effect_type" property="effectType" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ExtendLogsResultMap" extends="BaseResultMap" type="com.cmcc.vrp.province.model.PresentRecord">
        <result column="enterpriseCode" property="enterpriseCode" jdbcType="VARCHAR"/>
        <result column="enterpriseName" property="enterpriseName" jdbcType="VARCHAR"/>
        <result column="productCode" property="productCode" jdbcType="VARCHAR"/>
        <result column="productName" property="productName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, rule_id, prd_id, mobile, status, error_message,
        create_time,
        operate_time,sys_serial_num,boss_serial_num
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from present_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByRuleId" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select *
        from present_record
        where rule_id =
        #{ruleId,jdbcType=BIGINT}
    </select>
    
    <!-- 根据系统流水号查找 -->
    <select id="selectBySysSerialNum" resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select *
        from present_record
        where sys_serial_num =
        #{sysSerialNum,jdbcType=VARCHAR}
    </select>

    <select id="selectStatus" resultType="int" parameterType="java.lang.Long">
        SELECT
        COUNT(0) FROM present_record WHERE
        rule_id =
        #{ruleId,jdbcType=BIGINT} and status IN(3,4)
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from
        present_record
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByRuleId" parameterType="java.lang.Long">
        delete from
        present_record
        where rule_id = #{ruleId,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.cmcc.vrp.province.model.PresentRecord">
        insert into
        present_record (id, rule_id,
        mobile, status, error_message,
        create_time, operate_time, sys_serial_num)
        values (#{id,jdbcType=BIGINT},
        #{ruleId,jdbcType=BIGINT},
        #{mobile,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT},
        #{errorMessage,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{operateTime,jdbcType=TIMESTAMP},
        #{sysSerialNum,jdbcType=VARCHAR})
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into present_record
        (rule_id,prd_id,mobile,status,create_time,sys_serial_num,effect_type) values

        <foreach collection="list" item="item" index="index"
                 separator=",">
            (#{item.ruleId,jdbcType=BIGINT},
            #{item.prdId,jdbcType=BIGINT},
            #{item.mobile,jdbcType=VARCHAR},
            #{item.status,jdbcType=TINYINT},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.sysSerialNum,jdbcType=VARCHAR},
            #{item.effectType,jdbcType=INTEGER})
        </foreach>

    </insert>

    <insert id="insertSelective" parameterType="com.cmcc.vrp.province.model.PresentRecord">
        insert into present_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="ruleId != null">
                rule_id,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="errorMessage != null">
                error_message,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="operateTime != null">
                operate_time,
            </if>
            <if test="sysSerialNum != null">
                sys_serial_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="ruleId != null">
                #{ruleId,jdbcType=BIGINT},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="errorMessage != null">
                #{errorMessage,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateTime != null">
                #{operateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sysSerialNum != null">
                #{sysSerialNum,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cmcc.vrp.province.model.PresentRecord">
        update present_record
        <set>
            <if test="ruleId != null">
                rule_id = #{ruleId,jdbcType=BIGINT},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="errorMessage != null">
                error_message = #{errorMessage,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateTime != null">
                operate_time = #{operateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sysSerialNum != null">
                sys_serial_num = #{sysSerialNum,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cmcc.vrp.province.model.PresentRecord">
        update
        present_record
        set rule_id = #{ruleId,jdbcType=BIGINT},
        mobile = #{mobile,jdbcType=VARCHAR},
        status =
        #{status,jdbcType=TINYINT},
        error_message =
        #{errorMessage,jdbcType=VARCHAR},
        create_time =
        #{createTime,jdbcType=TIMESTAMP},
        operate_time =
        #{operateTime,jdbcType=TIMESTAMP},
        sys_serial_num =
        #{sysSerialNum,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="get" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from redpacket_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="queryCount" resultType="int"
            parameterType="com.cmcc.vrp.util.PageResult">
        select
        count(0)
        from present_record
        where
        rule_id= #{ruleId}
    </select>

    <select id="queryCountPlus" resultType="int" parameterType="java.util.Map">
        select
        count(0)
        from present_record
        where rule_id= #{ruleId}
        <if test="mobile != null  and mobile != ''">
            and mobile like CONCAT('%',CONCAT(#{mobile},'%'))
        </if>

        <if test="status != null  and status != ''">
            and status = #{status}
        </if>
    </select>


    <select id="count" resultType="int" parameterType="java.lang.Long">
        select
        count(0)
        from present_record
        where rule_id = #{id}
    </select>
    <select id="queryRecord" resultMap="RecordResultMap"
            parameterType="com.cmcc.vrp.util.PageResult">
        select
        a.id,a.mobile,c.name,a.operate_time,a.status,a.error_message from
        present_record as a, present_rule as b,
        product as c
        where a.rule_id=b.id and b.prd_id = c.id and
        a.rule_id=#{ruleId}
        limit
        #{pageNum},
        #{pageSize}

    </select>


    <select id="queryRecordPlus" resultMap="RecordResultMap"
            parameterType="java.util.Map">
        select
        a.id,a.mobile,
        a.sys_serial_num,
        c.name,a.operate_time,a.status,a.effect_type,
        a.error_message,b.creator_id as creatorId
        from
        present_record as a, present_rule as b,
        product as c
        where a.rule_id=b.id and a.prd_id = c.id and
        a.rule_id=#{ruleId}
        <if test="mobile != null  and mobile != ''">
            and mobile like CONCAT('%',CONCAT(#{mobile},'%'))
        </if>
        <if test="status != null  and status != ''">
            and a.status = #{status}
        </if>
        limit
        #{pageNum},#{pageSize}

    </select>

    <select id="queryByRuleStatus" resultMap="BaseResultMap"
            parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        present_record
        WHERE 1=1
        <if test="ruleId != null">
            AND rule_id = #{ruleId,jdbcType=BIGINT}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
    </select>


    <!-- 用于日志管理查询 -->
    <select id="countListLogs" parameterType="java.util.Map" resultType="java.lang.Long">
        SELECT
        count(*)
        FROM
        present_record t1
        LEFT JOIN
        present_rule t2 ON t1.rule_id = t2.id
        LEFT JOIN
        enterprises t3 ON t3.id = t2.ent_id
        LEFT JOIN
        product t4 ON t4.id = t2.prd_id
        <where>
            <if test="startDate != null  and  startDate !='' ">
                and t1.operate_time &gt;= #{startDate}
            </if>

            <if test="endDate != null and  endDate !=''">
                and t1.operate_time &lt;= #{endDate}
            </if>

            <if test="sysSerialCode != null and sysSerialCode != ''">
                and t1.sys_serial_num = #{sysSerialCode,jdbcType=VARCHAR}
            </if>

            <if test="mobile != null and mobile != ''">
                and t1.mobile = #{mobile,jdbcType=VARCHAR}
            </if>

            <if test="status != null and status != '' ">
                and t1.status = #{status,jdbcType=TINYINT}
            </if>

            <if test="enterpriseCode != null and enterpriseCode != ''">
                and t3.code like CONCAT('%',CONCAT(#{enterpriseCode},'%'))
            </if>

            <if test="enterpriseName != null and enterpriseName != ''">
                and t3.name like CONCAT('%',CONCAT(#{enterpriseName},'%'))
            </if>
            <!--
            <if test="productCode != null and productCode != ''">
              and t4.product_code like CONCAT('%',CONCAT(#{productCode},'%'))
          </if>

            <if test="productName != null and productName != ''">
              and t4.name like CONCAT('%',CONCAT(#{productName},'%'))
          </if>
          -->
        </where>
    </select>

    <select id="listLogs" parameterType="java.util.Map" resultMap="ExtendLogsResultMap">
        SELECT
        t1.id,
        t1.rule_id,
        t1.mobile,
        t1.status,
        t1.error_message,
        t1.create_time,
        t1.operate_time,
        t1.sys_serial_num,

        t3.name as enterpriseName,
        t3.code as enterpriseCode,

        t4.product_code as productCode,
        t4.name as productName

        FROM
        present_record t1
        LEFT JOIN
        present_rule t2 ON t1.rule_id = t2.id
        LEFT JOIN
        enterprises t3 ON t3.id = t2.ent_id
        LEFT JOIN
        product t4 ON t4.id = t2.prd_id
        <where>
            <if test="startDate != null  and  startDate !='' ">
                and t1.operate_time &gt;= #{startDate}
            </if>

            <if test="endDate != null and  endDate !=''">
                and t1.operate_time &lt;= #{endDate}
            </if>

            <if test="sysSerialCode != null and sysSerialCode != ''">
                and t1.sys_serial_num = #{sysSerialCode,jdbcType=VARCHAR}
            </if>

            <if test="mobile != null and mobile != ''">
                and t1.mobile = #{mobile,jdbcType=VARCHAR}
            </if>

            <if test="status != null and status != '' ">
                and t1.status = #{status,jdbcType=TINYINT}
            </if>

            <if test="enterpriseCode != null and enterpriseCode != ''">
                and t3.code like CONCAT('%',CONCAT(#{enterpriseCode},'%'))
            </if>

            <if test="enterpriseName != null and enterpriseName != ''">
                and t3.name like CONCAT('%',CONCAT(#{enterpriseName},'%'))
            </if>
            <!--
            <if test="productCode != null and productCode != ''">
              and t4.product_code like CONCAT('%',CONCAT(#{productCode},'%'))
          </if>

            <if test="productName != null and productName != ''">
              and t4.name like CONCAT('%',CONCAT(#{productName},'%'))
          </if>
          -->
        </where>

        ORDER BY t1.create_time DESC, t1.operate_time DESC

        <if test="pageSize != null and pageNum!=null">
            LIMIT #{pageNum}, #{pageSize}
        </if>
    </select>

    <!-- batch update status -->
    <update id="batchUpdateStatus">
        UPDATE
        present_record
        SET
        status = #{newStatus, jdbcType = TINYINT},
        operate_time = NOW()
        WHERE
        id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id, jdbcType = BIGINT}
        </foreach>
    </update>

    <update id="batchUpdateChargeResult" parameterType="java.util.List">
        UPDATE
        present_record
        SET
        status = CASE
        <foreach collection="records" item="record" close="ELSE `status` END,">
            WHEN id=#{record.id} THEN #{record.status}
        </foreach>

        error_message = CASE
        <foreach collection="records" item="record" close="ELSE `error_message` END,">
            WHEN id=#{record.id} THEN #{record.errorMessage}
        </foreach>

        operate_time = CASE
        <foreach collection="records" item="record" close="ELSE `operate_time` END,">
            WHEN id=#{record.id} THEN NOW()
        </foreach>

        status_code = CASE
        <foreach collection="records" item="record" close="ELSE `status_code` END,">
            WHEN id=#{record.id} THEN #{record.statusCode}
        </foreach>

        mobile = CASE
        <foreach collection="records" item="record" close="ELSE `mobile` END">
            WHEN id=#{record.id} THEN #{record.mobile}
        </foreach>

        WHERE
        id IN
        <foreach collection="records" item="record" open="(" close=")" separator=",">
            #{record.id, jdbcType = BIGINT}
        </foreach>
    </update>

    <update id="updateStatus">
        UPDATE
        present_record
        SET
        status = #{status, jdbcType = INTEGER},
        error_message = #{errorMsg, jdbcType = VARCHAR},
        operate_time = NOW()
        WHERE
        id = #{id, jdbcType = BIGINT}
    </update>

    <update id="updateStatusAndStatusCode">
        UPDATE
        present_record
        SET
        status = #{status, jdbcType = INTEGER},
        error_message = #{errorMsg, jdbcType = VARCHAR},
        status_code = #{statusCode, jdbcType = VARCHAR},
        operate_time = NOW()
        WHERE
        id = #{id, jdbcType = BIGINT}
    </update>

    <!-- batch update statusCode -->
    <update id="batchUpdateStatusCode">
        UPDATE
        present_record
        SET
        status_code = #{newStatusCode, jdbcType = VARCHAR},
        operate_time = NOW()
        WHERE
        cast(IFNULL(status_code, '0') as SIGNED) &lt; cast(#{newStatusCode, jdbcType = VARCHAR} as SIGNED)
        and
        id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id, jdbcType = BIGINT}
        </foreach>
    </update>

    <!-- update statusCode -->
    <update id="updateStatusCode">
        UPDATE
        present_record
        SET
        status_code = #{statusCode, jdbcType = VARCHAR},
        operate_time = NOW()
        WHERE
        cast(IFNULL(status_code, '0') as SIGNED) &lt; cast(#{statusCode, jdbcType = VARCHAR} as SIGNED)
        and
        id = #{recordId, jdbcType = BIGINT}
    </update>
</mapper>